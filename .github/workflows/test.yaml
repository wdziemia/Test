name: Test

on:
  issue_comment:
    types: [created]

jobs:
  Update-Screenshots:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/push browserstack')
    runs-on: ubuntu-latest
    steps:
    - name: Resolve Buildkite Params
      uses: "actions/github-script@v7"
      id: buildkite_params
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const comment_body = (context.payload.comment?.body || "").replace(/[\r\n]/g, '').toLowerCase();
          
          // Check command for "platform"
          const platform = comment_body.includes("android") ? "android" : comment_body.includes("ios") ? "ios" : "unknown";
          core.setOutput("platform", platform);
          
          // Check command for "app"
          const app = comment_body.includes("dash") ? "dash" : comment_body.includes("dbapp") ? "dbapp" : "unknown";
          core.setOutput("app", app);
    - name: Comment ACK
      uses: "actions/github-script@v7"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const comment_id = '${{ github.event.comment.id }}'
          const comment_body = (context.payload.comment?.body || "").replace(/[\r\n]/g, '');
          const comment_body_updated = comment_body + '\n\n---\nüöÄ üì≤ [@buildkite/browserstack-uploader](https://buildkite.com/dropbox/browserstack-build-uploader) for ${{ steps.buildkite_params.outputs.app }}-${{ steps.buildkite_params.outputs.platform }} for ${{github.event.issue.pull_request.html_url}}'
          github.rest.issues.updateComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: comment_id,
            body: comment_body_updated
            })
    - name: Complete ACK
      uses: "actions/github-script@v7"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const comment_id = '${{ github.event.comment.id }}'
          const comment_body = (context.payload.comment?.body || "").replace(/[\r\n]/g, '');
          const state = comment_body.includes("pass") ? 'passed' : 'failed'
          if (state !== 'passed') {
            const comment_body_updated = comment_body + '\n\n---\n‚ùå üì≤Ô∏è [@buildkite/browserstack-uploader](http://www.example.com) Failed'
            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: comment_id,
              body: comment_body_updated
            })
          } else {
            console.log("${{ steps.start_pipeline.outputs.json }}")
            const comment_body_updated = comment_body + '\n\n---\n‚úÖ üì≤ [@buildkite/browserstack-uploader](http://www.example.com) - http://example.com/build/url'
            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: comment_id,
              body: comment_body_updated
            })
          }
